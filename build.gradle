buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

version = '1.18-1.0'
group = 'io.alwa.featuredservers'
archivesBaseName = 'featuredservers'

java.toolchain.languageVersion = JavaLanguageVersion.of(17)
def ENV = System.getenv()
if (ENV.CI_PIPELINE_IID) {
    version = version + "." + "${System.getenv().CI_PIPELINE_IID}"
}

minecraft {
    mappings channel: 'official', version: '1.18'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=' + archivesBaseName + '.mixins.json'

            mods {
                featuredservers {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            arg '-mixin.config=' + archivesBaseName + '.mixins.json'

            mods {
                featuredservers {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'featuredservers', '--all', '--output', file('src/generated/resources/')

            mods {
                featuredservers {
                    source sourceSets.main
                }
            }
        }
    }
}

mixin {
    add sourceSets.main, "${archivesBaseName}.mixins.json"
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.18-38.0.14'
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'
}

jar {
    manifest {
        attributes([
            "Specification-Title": "featuredservers",
            "Specification-Vendor": "Jake_Evans",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"Jake_Evans",
            "MixinConfigs" : "${archivesBaseName}.mixins.json",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

def reobfFile = file("$buildDir/reobfJar/output.jar")
def reobfArtifact = artifacts.add('default', reobfFile) {
    type 'jar'
    builtBy 'reobfJar'
}
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact reobfArtifact
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}